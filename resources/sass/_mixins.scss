@mixin backImage($image,
  $height: 100vh,
  $bgPos: center center
  ) {
  background: linear-gradient( to bottom,
    rgba(0,0,0,0),
    rgba(0,0,0,.6)),
    url($image);
  background-repeat: no-repeat;
  background-position: $bgPos;
  background-size: cover;
  height: $height;
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}
@mixin cardgrid($qty, $margin, $marginBottom: $margin) {
  // Add variables -- $tallest and $cardsInRow ??
  width: ((100% - (($qty - 1) * $margin))/$qty);
  &:nth-child(n) { // all of 'em 
    margin-right: $margin;
    margin-bottom: $marginBottom;
  }
  &:nth-child(#{$qty}n) { // overwrite the last in each row to have to padding
    margin-right: 0;
    margin-bottom: 0;
  }
  // TODO: to complete this pattern for future use:
  // With last-child you could throw in some code to change the arrangement if trailing items don't take up a full row -- to change the spacing
  // Add a check at the end of each rown in the cardgrid mixin. The mixin must keep track of the tallest card as it processes them, with a variable called tallest?
}

@mixin break($args...) {
  @if length($args) == 1 {
    @media (min-width: nth($args, 1)) {
      @content;
    }
  } @else {
    @media (min-width: nth($args, 1))
      and (max-width: nth($args, 2)) {
      @content;
    }
  }

}
